function createStillACR_sbu(command_str,position)

global setup

if nargin == 0
    command_str = 'initialize';
    position = [1 30 1276 720];
elseif nargin == 1
    position = [1 30 1276 720];
end
if ~strcmp(command_str,'initialize')
    
    % RETRIEVE HANDLES AND REDEFINE THE HANDLE VARIABLES.
    % Assume that the current figure contains the backgroundQuestions.
    h_fig = gcf;
    if ~strcmp(get(h_fig,'tag'),'rand')
        % If the current figure does not have the right tag, find the one that does.
        h_figs = get(0,'children');
        h_fig = findobj(h_figs,'flat', 'tag','rand');
        
        if isempty(h_fig)
            % If the fun_plt4 GUI does not exist initialize it. Then run the command string
            % that was originally requested.
            createStillACR_sbu('initialize',position); %first initialize
            createStillACR_sbu(command_str,position); %then run the required command
            return;
        end
    end
    
    % At this point we know that h_fig is the handle to the figure containing the GUI of interest to
    % this function. Therefore we can use this figure handle to cut down on the number of objects
    % that need to be searched for tag names as follows:
    
    h_panel5 = findobj(h_fig(1),'tag','panel5');
    h_panel6 = findobj(h_fig(1),'tag','panel6');
    h_panel7 = findobj(h_fig(1),'tag','panel7');
    h_textBox11 = findobj(h_fig(1),'tag','textBox11');
    h_textBox12 = findobj(h_fig(1),'tag','textBox12');
    h_textBox13 = findobj(h_fig(1),'tag','textBox13');
    h_textBox14 = findobj(h_fig(1),'tag','textBox14'); 
    h_textBox21 = findobj(h_fig(1),'tag','textBox21');
    h_textBox22 = findobj(h_fig(1),'tag','textBox22');
    h_textBox23 = findobj(h_fig(1),'tag','textBox23');
    h_textBox24 = findobj(h_fig(1),'tag','textBox24');
    h_textBox25 = findobj(h_fig(1),'tag','textBox25');
    h_textBox26 = findobj(h_fig(1),'tag','textBox26');
    h_textBox27 = findobj(h_fig(1),'tag','textBox27');
    h_textBox28 = findobj(h_fig(1),'tag','textBox28');
    h_textBox29 = findobj(h_fig(1),'tag','textBox29');
    h_textBox30 = findobj(h_fig(1),'tag','textBox30');
    h_textBox31 = findobj(h_fig(1),'tag','textBox31');
    h_textBox32 = findobj(h_fig(1),'tag','textBox32');
    h_textBox33 = findobj(h_fig(1),'tag','textBox33');
    h_textBox34 = findobj(h_fig(1),'tag','textBox34');
    h_textBox35 = findobj(h_fig(1),'tag','textBox35');
    h_textBox36 = findobj(h_fig(1),'tag','textBox36');
    h_textBox37 = findobj(h_fig(1),'tag','textBox37');
    
    h_checkBox1 = findobj(h_fig(1),'tag','checkBox1');
    ref_button1 = findobj(h_fig(1),'tag','ref_button1');
    ref_button2 = findobj(h_fig(1),'tag','ref_button2');
    ref_button3 = findobj(h_fig(1),'tag','ref_button3');
    
    ref_button4 = findobj(h_fig(1),'tag','ref_button4');

end

% INITIALIZE THE GUI SECTION.
if strcmp(command_str,'initialize')
    
    % Make sure that the GUI has not been already initialized in another existing figure.
    % NOTE THAT THIS GUI INSTANCE CHECK IS NOT REQUIRED, UNLESS YOU WANT TO INSURE THAT ONLY
    % ONE INSTANCE OF THE GUI IS CREATED!
    h_figs = get(0,'children');
    h_fig = findobj(h_figs,'flat', 'tag','rand');
    if ~isempty(h_fig)
        figure(h_fig(1));
        return
    end
    
    % Main figure %--------------------------------------------------------
    %
    h_fig = figure('position',position,...
        'name','Create ACR sbu', ...
        'tag','rand'); %[449 -763 1024 742]
    
    % CV Information %-----------------------------------------------------
    %
    h_panel0 = uipanel(h_fig, ...
        'title', 'CVs', ...
        'Units', 'Normalized', ...
        'Position',[0.01 0.7 0.5 0.3], ...
        'Tag', 'panel0',...
        'fontsize',12);
    
    uicontrol(h_panel0, ...
        'Style','text', ...
        'Units', 'normalized', ...
        'Position',[.55 .7 .15 .1], ...
        'String','Number:', ...
        'FontSize', 12);
    
    uicontrol(h_panel0, ...
        'Style','edit', ...
        'Units', 'normalized', ...
        'Position',[.7 .69 .1 .13], ...
        'CallBack','createStillACR_sbu(''Number of Contents'');',...
        'tag','textBox11', ...
        'BackgroundColor', 'w', ...
        'FontSize', 12);
    
    uicontrol(h_panel0, ...
        'Style','text', ...
        'Units', 'normalized', ...
        'Position',[.55 .3 .15 .1], ...
        'String','Number:', ...
        'FontSize', 12);
    
    uicontrol(h_panel0, ...
        'Style','edit', ...
        'Units', 'normalized', ...
        'Position',[.7 .29 .1 .13], ...
        'CallBack','createStillACR_sbu(''Number of Pipes'');',...
        'tag','textBox12', ...
        'BackgroundColor', 'w', ...
        'FontSize', 12);
    
    uicontrol(h_panel0, ...
        'Style','text', ...
        'Units', 'normalized', ...
        'Position',[.04 .7 .3 .1], ...
        'String','CV1 name:', ...
        'FontSize', 12);
    
    uicontrol(h_panel0, ...
        'Style','edit',...
        'Units', 'normalized', ...
        'Position',[.28 .69 .2 .13], ...
        'CallBack','createStillACR_sbu(''CV1 name'');',...
        'tag','textBox13', ...
        'BackgroundColor', 'w', ...
        'FontSize', 12,...
        'string',setup.cv1_name);
    
    uicontrol(h_panel0, ...
        'Style','text', ...
        'Units', 'normalized', ...
        'Position',[.04 .3 .3 .1], ...
        'String','CV2 name:', ...
        'FontSize', 12);
    
    uicontrol(h_panel0, ...
        'Style','edit', ...
        'Units', 'normalized', ...
        'Position',[.28 .29 .2 .13], ...
        'CallBack','createStillACR_sbu(''CV2 name'');',...
        'tag','textBox14', ...
        'BackgroundColor', 'w', ...
        'FontSize', 12,...
        'string',setup.cv2_name);
    
    % Panels %-------------------------------------------------------------
    %
    % randomizing panel
    h_panel1 = uipanel(h_fig, ...
        'title', 'Randomizing Options', ...
        'Units', 'Normalized', ...
        'Position',[0.01 0.3 0.5 0.4], ...
        'Tag', 'panel1',...
        'fontsize',12);
    
    % button panel
    uipanel(h_panel1, ...
        'Units', 'Normalized', ...
        'Position',[0.35 0.333 0.35 0.1], ...
        'Tag', 'panel2');
    
    % button panel
    uipanel(h_panel1, ...
        'Units', 'Normalized', ...
        'Position',[0.35 0.5 0.35 0.32], ...
        'Tag', 'panel3');
    
    % Referencing panel
    h_panel4 = uipanel(h_fig, ...
        'title','Referencing',...
        'Units', 'Normalized', ...
        'Position',[0.53 0.5 0.3 0.5], ...
        'Tag', 'panel4',...
        'fontsize',12);
    
    
    % Referencing enabled
    uicontrol(h_panel4,...
        'style','checkbox',...
        'units','normalized',...
        'position',[0.01 0.93 0.99 0.06], ...
        'string','Referencing enabled',...
        'value',0,...
        'tag','checkBox1',...
        'CallBack','createStillACR_sbu(''checkBox1'');', ...
        'FontSize', 12);
    
    % Referencing radio buttons
    h_buttongroup = uibuttongroup(h_panel4,...
        'units','normalized',...
        'Position',[0.01 0.6 .7 0.29]);
    
    % Create three radio buttons in the button group.
    uicontrol('Style','Radio',...
        'units','normalized',...
        'String','One static reference',...
        'pos',[0.01 0.8 .99 .15],...
        'parent',h_buttongroup,...
        'enable','off',...
        'tag','ref_button1', ...
        'FontSize', 12);
    
    uicontrol('Style','Radio',...
        'units','normalized',...
        'String','Two static references',...
        'pos',[0.01 0.5 .99 .15],...
        'parent',h_buttongroup,...
        'enable','off',...
        'tag','ref_button2', ...
        'FontSize', 12);
    
    uicontrol('Style','Radio',...
        'units','normalized',...
        'String','Dynamic reference',...
        'pos',[0.01 0.2 .99 .2],...
        'parent',h_buttongroup,...
        'enable','off',...
        'tag','ref_button3', ...
        'FontSize', 12);
    
    % Initialize some button group properties.
    set(h_buttongroup,'SelectionChangeFcn',@selcbk);
    set(h_buttongroup,'SelectedObject',[]);  % No selection
    set(h_buttongroup,'Visible','on');
    
    
    %-Referencing mode panels %--------------------------------------------
    %
    % Get static reference image #1
    
    % Panel for 1 reference file selection
    h_panel5 = uipanel(h_panel4, ...
        'title','Referencing:',...
        'Units', 'Normalized', ...
        'Position',[0.01 0.23 0.98 0.35],...
        'Tag', 'panel5',...
        'fontsize',12,...
        'visible','off');
    
    uicontrol(h_panel5,...
        'Style','text', ...
        'Units', 'normalized', ...
        'Position',[0 0.2 1 0.7], ...
        'String',['One static reference image per content selected. ' ...
        'Please remember to define the image files in the filenames.xls'], ...
        'FontSize', 12,...
        'tag','ref1_name',...
        'horizontal','left');
    
    % Get two static reference images #1 and #2----------------------------
    %
    % Panel for 2 reference files selections
    h_panel6 = uipanel(h_panel4, ...
        'title','Referencing:',...
        'Units', 'Normalized', ...
        'Position',[0.01 0.23 0.98 0.35], ...
        'Tag', 'panel6',...
        'fontsize',12,...
        'visible','off');
    
    uicontrol(h_panel6,...
        'Style','text', ...
        'Units', 'normalized', ...
        'Position',[0 0.2 1 0.7], ...
        'String',['Two static reference images per content selected. ' ...
        'Please remember to define the image files in the filenames.xls'], ...
        'FontSize', 12,...
        'tag','right ref',...
        'horizontal','left');
    
    % Get dynamic reference image options----------------------------------
    %
    % Panel for dynamic reference folder selection
    h_panel7 = uipanel(h_panel4,...
        'title','Dynamic referencing options',...
        'Units', 'Normalized', ...
        'Position',[0.01 0.10 0.98 0.5], ...
        'Tag', 'panel7',...
        'fontsize',12,...
        'visible','off');
    
    uicontrol(h_panel7,...
        'style','checkbox',...
        'units','normalized',...
        'position',[0.01 0.76 0.99 0.2], ...
        'string','Randomized references',...
        'value',0,...
        'tag','checkBox2',...
        'CallBack','createStillACR_sbu(''checkBox2'');', ...
        'FontSize', 12);
    
    uicontrol(h_panel7,...
        'style','checkbox',...
        'units','normalized',...
        'position',[0.01 0.59 0.99 0.2], ...
        'string','Leave current image out',...
        'value',0,...
        'tag','checkBox3',...
        'CallBack','createStillACR_sbu(''checkBox3'');', ...
        'FontSize', 12);
    
    uicontrol(h_panel7,...
        'style','checkbox',...
        'units','normalized',...
        'position',[0.01 0.42 0.99 0.2], ...
        'string','Masking between references',...
        'value',0,...
        'tag','checkBox4',...
        'CallBack','createStillACR_sbu(''checkBox4'');', ...
        'FontSize', 12);
    
    uicontrol(h_panel7, ...
        'Style','text', ...
        'Units', ...
        'normalized', ...
        'Position',[0.01 0.22 0.6 0.2], ...
        'String','Time between references:', ...
        'FontSize', 12,...
        'horizontal','left');
    
    uicontrol(h_panel7, ...
        'Style','edit', ...
        'Units', 'normalized', ...
        'string',setup.dynamic_reference_time,...
        'Position',[.58 .26 .1 .15], ...
        'CallBack','createStillACR_sbu(''Dynamic reference time'');',...
        'tag','textBox37', ...
        'BackgroundColor', 'w', ...
        'FontSize', 12); 
    
    
    uicontrol(h_panel7, ...
        'Style','text', ...
        'Units', ...
        'normalized', ...
        'Position',[0.01 0.01 0.9 0.2], ...
        'String','References are drawn from CV2.', ...
        'FontSize', 12,...
        'horizontal','left');
    
    % Monitor options------------------------------------------------------
    %
    % Monitor options panel
    h_panel8 = uipanel(h_fig,...
        'title','Monitor options',...
        'Units', 'Normalized', ...
        'Position',[0.53 0.09 0.45 0.4], ...
        'Tag', 'panel8',...
        'fontsize',12);
    
    uicontrol(h_panel8,...
        'Style','popupmenu',...
        'units', 'normalized',  ...
        'String',{'Dynamic references',...
        'Static reference 1',...
        'Static reference 2',...
        'Stimulus',...
        'Disabled'},...
        'Value',5, ...
        'Position',[0.03 0.8 0.25 0.1],...
        'CallBack','createStillACR_sbu(''popup2'')',...
        'tag','popup2', ...
        'FontSize', 12);
    
    uicontrol(h_panel8,...
        'Style','popupmenu',...
        'units', 'normalized', ...
        'String',{'Dynamic references',...
        'Static reference 1',...
        'Static reference 2',...
        'Stimulus',...
        'Disabled'},...
        'Value',5, ...
        'Position',[0.03 0.7 0.25 0.1],...
        'CallBack','createStillACR_sbu(''popup3'')',...
        'tag','popup3', ...
        'FontSize', 12);
    
    uicontrol(h_panel8,...
        'Style','popupmenu',...
        'units', 'normalized', ...
        'String',{'Dynamic references',...
        'Static reference 1',...
        'Static reference 2',...
        'Stimulus',...
        'Disabled'},...
        'Value',5, ...
        'Position',[0.03 0.6 0.25 0.1],...
        'CallBack','createStillACR_sbu(''popup4'')',...
        'tag','popup4', ...
        'FontSize', 12);
    
    uicontrol(h_panel8,...
        'Style','popupmenu',...
        'units', 'normalized', ...
        'String',{'Questions',...
        'Dynamic references',...
        'Static reference 1',...
        'Static reference 2',...
        'Stimulus',...
        'Disabled'},...
        'Value',6, ...
        'Position',[0.03 0.5 0.25 0.1],...
        'CallBack','createStillACR_sbu(''popup5'')',...
        'tag','popup5', ...
        'FontSize', 12);

    uicontrol(h_panel8, ...
        'Style','edit', ...
        'Units', 'normalized', ...
        'string',setup.screens_info13,...
        'Position',[.4 .8 .1 .1], ...
        'CallBack','createStillACR_sbu(''Size of Stimulus Display 1 X'');',...
        'tag','textBox21', ...
        'BackgroundColor', 'w', ...
        'FontSize', 12); 
    
    uicontrol(h_panel8, ...
        'Style','edit', ...
        'Units', 'normalized', ...
        'string',setup.screens_info14,...
        'Position',[.51 .8 .1 .1], ...
        'CallBack','createStillACR_sbu(''Size of Stimulus Display 1 Y'');',...
        'tag','textBox22', ...
        'BackgroundColor', 'w', ...
        'FontSize', 12);
    
    uicontrol(h_panel8, ...
        'Style','edit', ...
        'Units', 'normalized', ...
        'string',setup.screens_info23,...
        'Position',[.4 .7 .1 .1], ...
        'CallBack','createStillACR_sbu(''Size of Stimulus Display 2 X'');',...
        'tag','textBox23', ...
        'BackgroundColor', 'w', ...
        'FontSize', 12); 
    
    uicontrol(h_panel8, ...
        'Style','edit', ...
        'Units', 'normalized', ...
        'string',setup.screens_info24,...
        'Position',[.51 .7 .1 .1], ...
        'CallBack','createStillACR_sbu(''Size of Stimulus Display 2 Y'');',...
        'tag','textBox24', ...
        'BackgroundColor', 'w', ...
        'FontSize', 12);
    
    uicontrol(h_panel8, ...
        'Style','edit', ...
        'Units', 'normalized', ...
        'string',setup.screens_info33,...
        'Position',[.4 .6 .1 .1], ...
        'CallBack','createStillACR_sbu(''Size of Stimulus Display 3 X'');',...
        'tag','textBox25', ...
        'BackgroundColor', 'w', ...
        'FontSize', 12); 
    
    uicontrol(h_panel8, ...
        'Style','edit', ...
        'Units', 'normalized', ...
        'string',setup.screens_info34,...
        'Position',[.51 .6 .1 .1], ...
        'CallBack','createStillACR_sbu(''Size of Stimulus Display 3 Y'');',...
        'tag','textBox26', ...
        'BackgroundColor', 'w', ...
        'FontSize', 12);
    
   uicontrol(h_panel8, ...
        'Style','edit', ...
        'Units', 'normalized', ...
        'string',setup.screens_info43,...
        'Position',[.4 .5 .1 .1], ...
        'CallBack','createStillACR_sbu(''Size of Stimulus Display 4 X'');',...
        'tag','textBox27', ...
        'BackgroundColor', 'w', ...
        'FontSize', 12); 
    
    uicontrol(h_panel8, ...
        'Style','edit', ...
        'Units', 'normalized', ...
        'string',setup.screens_info44,...
        'Position',[.51 .5 .1 .1], ...
        'CallBack','createStillACR_sbu(''Size of Stimulus Display 4 Y'');',...
        'tag','textBox28', ...
        'BackgroundColor', 'w', ...
        'FontSize', 12);

    uicontrol(h_panel8, ...
        'Style','edit', ...
        'Units', 'normalized', ...
        'string',setup.screens_info11,...
        'Position',[.7 .8 .1 .1], ...
        'CallBack','createStillACR_sbu(''Position of Stimulus Display 1 X'');',...
        'tag','textBox29', ...
        'BackgroundColor', 'w', ...
        'FontSize', 12); 
    
    uicontrol(h_panel8, ...
        'Style','edit', ...
        'Units', 'normalized', ...
        'string',setup.screens_info12,...
        'Position',[.81 .8 .1 .1], ...
        'CallBack','createStillACR_sbu(''Position of Stimulus Display 1 Y'');',...
        'tag','textBox30', ...
        'BackgroundColor', 'w', ...
        'FontSize', 12);
    
    uicontrol(h_panel8, ...
        'Style','edit', ...
        'Units', 'normalized', ...
        'string',setup.screens_info21,...
        'Position',[.7 .7 .1 .1], ...
        'CallBack','createStillACR_sbu(''Position of Stimulus Display 2 X'');',...
        'tag','textBox31', ...
        'BackgroundColor', 'w', ...
        'FontSize', 12); 
    
    uicontrol(h_panel8, ...
        'Style','edit', ...
        'Units', 'normalized', ...
        'string',setup.screens_info22,...
        'Position',[.81 .7 .1 .1], ...
        'CallBack','createStillACR_sbu(''Position of Stimulus Display 2 Y'');',...
        'tag','textBox32', ...
        'BackgroundColor', 'w', ...
        'FontSize', 12);
    
    uicontrol(h_panel8, ...
        'Style','edit', ...
        'Units', 'normalized', ...
        'string',setup.screens_info31,...
        'Position',[.7 .6 .1 .1], ...
        'CallBack','createStillACR_sbu(''Position of Stimulus Display 3 X'');',...
        'tag','textBox33', ...
        'BackgroundColor', 'w', ...
        'FontSize', 12); 
    
    uicontrol(h_panel8, ...
        'Style','edit', ...
        'Units', 'normalized', ...
        'string',setup.screens_info32,...
        'Position',[.81 .6 .1 .1], ...
        'CallBack','createStillACR_sbu(''Position of Stimulus Display 3 Y'');',...
        'tag','textBox34', ...
        'BackgroundColor', 'w', ...
        'FontSize', 12);
    
   uicontrol(h_panel8, ...
        'Style','edit', ...
        'Units', 'normalized', ...
        'string',setup.screens_info41,...
        'Position',[.7 .5 .1 .1], ...
        'CallBack','createStillACR_sbu(''Position of Stimulus Display 4 X'');',...
        'tag','textBox35', ...
        'BackgroundColor', 'w', ...
        'FontSize', 12); 
    
    uicontrol(h_panel8, ...
        'Style','edit', ...
        'Units', 'normalized', ...
        'string',setup.screens_info42,...
        'Position',[.81 .5 .1 .1], ...
        'CallBack','createStillACR_sbu(''Position of Stimulus Display 4 Y'');',...
        'tag','textBox36', ...
        'BackgroundColor', 'w', ...
        'FontSize', 12);

   % Text labels for monitor selections-----------------------------------
    uicontrol(h_panel8,...
        'Style','text', ...
        'Units','normalized',...
        'Position',[0.3 0.83 0.1 0.06], ...
        'String','Left', ...
        'FontSize', 12);
    
    uicontrol(h_panel8, ...
        'Style','text', ...
        'Units', 'normalized', ...
        'Position',[0.3 0.73 0.1 0.06], ...
        'String','Center', ...
        'FontSize', 12);
    
    uicontrol(h_panel8, ...
        'Style','text', ...
        'Units', 'normalized', ...
        'Position',[0.3 0.63 0.1 0.06], ...
        'String','Right', ...
        'FontSize', 12);
    
    uicontrol(h_panel8, ...
        'Style','text', ...
        'Units', 'normalized',...
        'Position',[0.3 0.53 0.1 0.06], ...
        'String','Bottom', ...
        'FontSize', 12);
    
    uicontrol(h_panel8, ...
        'Style','text', ...
        'Units', 'normalized',...
        'Position',[0.4 0.92 0.2 0.1], ...
        'String','Stimulus Size', ...
        'FontSize', 11);
    
    uicontrol(h_panel8, ...
        'Style','text', ...
        'Units', 'normalized',...
        'Position',[0.65 0.92 0.3 0.1], ...
        'String','Stimulus position', ...
        'FontSize', 11);
    
    

    % CV randomizing options labels %--------------------------------------
    
    uicontrol(h_panel1, ...
        'Style','text', ...
        'Units', 'normalized', ...
        'Position',[0.355 0.85 0.07 0.06], ...
        'String','CV1', 'FontSize', 12);
    
    uicontrol(h_panel1, ...
        'Style','text', ...
        'Units', 'normalized', ...
        'Position',[0.61 0.85 0.07 0.06], ...
        'String','CV2', ...
        'FontSize', 12);
    
    uicontrol(h_panel1, ...
        'Style','text', ...
        'Units', 'normalized', ...
        'Position',[0.1 0.727 0.21 0.06], ...
        'String','1. Randomize', ...
        'FontSize', 12);
    
    uicontrol(h_panel1, ...
        'Style','text', ...
        'Units', 'normalized', ...
        'Position',[0.08 .54 0.27 0.06], ...
        'String','2. Dominant Variable', ...
        'FontSize', 12);
    
    uicontrol(h_panel1, ...
        'Style','text', ...
        'Units', 'normalized', ...
        'Position',[0.178 .356 0.16 0.06], ...
        'String','Choose first', ...
        'FontSize', 12,...
        'enable','on',...
        'tag','choose_first');
    
    % Radio buttons for randomizing options--------------------------------
    
    uicontrol(h_panel1,...
        'style','radio', ...
        'Units', 'normalized', ...
        'position',[.38 .695 0.1 0.1],...
        'callback','createStillACR_sbu(''cv1_rand'');',...
        'tag','radioButton1');
    
    uicontrol(h_panel1, ...
        'style','radio', ...
        'Units', 'normalized', ...
        'position',[.38 .52 .1 .1], ...
        'callback','createStillACR_sbu(''cv1_lock'');',...
        'tag','radioButton2',...
        'value',1);
    
    uicontrol(h_panel1, ...
        'style','radio', ...
        'Units', 'normalized', ...
        'position',[.63 .695 .05 .1], ...
        'callback','createStillACR_sbu(''cv2_rand'');',...
        'tag','radioButton3');
    
    uicontrol(h_panel1, ...
        'style','radio', ...
        'Units', 'normalized', ...
        'position',[.63 .52 .05 .1], ...
        'callback','createStillACR_sbu(''cv2_lock'');',...
        'tag','radioButton4',...
        'value',1);
    
    uicontrol(h_panel1, ...
        'style','radio', ...
        'Units', 'normalized', ...
        'position',[.38 .355 0.05 0.06], ...
        'callback','createStillACR_sbu(''cv1_dom'');',...
        'tag','radioButton5',...
        'enable','on',...
        'value',1);
    
    uicontrol(h_panel1, ...
        'style','radio', ...
        'Units', 'normalized', ...
        'position',[.63 .355 0.05 0.06], ...
        'callback','createStillACR_sbu(''cv2_dom'');',...
        'tag','radioButton6',...
        'enable','on');
    
    % Push buttons --------------------------------------------------------
    %
    % Quit program
    uicontrol(h_fig, ...
        'style','pushbutton', ...
        'Units', 'Normalized', ...
        'position',[0.93 0.01 0.06 0.03],...
        'CallBack','createStillACR_sbu(''Push Button Pressed'');',...
        'tag','button', ...
        'string','Quit', ...
        'FontSize', 12,...
        'back','red');
    
    % preview randomizing settings -button
    uicontrol(h_panel1,...
        'style','pushbutton', ...
        'Units', 'Normalized', ...
        'position',[0.72 0.03 0.26 0.1],...
        'CallBack','createStillACR_sbu(''Push Button2 Pressed'');',...
        'tag','button2', ...
        'string','Preview indices', ...
        'FontSize', 12,...
        'back',[230/255 232/255 250/255]);
    
    % Save and continue
    uicontrol(h_fig, ...
        'style','pushbutton', ...
        'Units', 'Normalized', ...
        'position',[0.71 0.01 0.17 .03],...
        'CallBack','createStillACR_sbu(''Push Button3 Pressed'');', ...
        'tag','button3', ...
        'string','Save and continue', ...
        'FontSize', 12,...
        'back','green');
    
    % Go back -button
    uicontrol(h_fig, ...
        'style','pushbutton', ...
        'Units', 'Normalized', ...
        'position',[0.008 0.01 0.13 .03],...
        'CallBack','createStillACR_sbu(''Push Button4 Pressed'');', ...
        'tag','button4', ...
        'string','Previous screen', ...
        'FontSize', 12,...
        'back',[230/255 232/255 250/255]);
    
    % Save as -button
    uicontrol(h_fig, ...
        'style','pushbutton', ...
        'Units', 'Normalized', ...
        'position',[0.5 0.01 0.17 .03],...
        'CallBack',@saveas, ...
        'tag','saveas', ...
        'string','Save as...', ...
        'FontSize', 12,...
        'back',[230/255 232/255 250/255]);
    
    % preview stimulus displays -button
    
    uicontrol(h_panel8,...
        'style','pushbutton', ...
        'Units', 'Normalized', ...
        'position',[0.72 0.03 0.26 0.1],...
        'CallBack','createStillACR_sbu(''Push Button5 Pressed'');',...
        'tag','button5', ...
        'string','Preview displays', ...
        'FontSize', 12,...
        'back',[230/255 232/255 250/255]);

    
    

    
    %----------------------------------------------------------------------
    % Feedback checkbox and text field
    uicontrol(h_fig,...
        'Style','check', ...
        'Units','normalized',...
        'Position',[0.1 0.2 0.3 0.06], ...
        'String','Ask for feedback after the test', ...
        'callback',@enable_feedback,...
        'FontSize', 12,...
        'back',[0.8 0.8 0.8],...
        'value',setup.feedback);
    
    % Feedback text
    uicontrol(h_fig, ...
        'Style','edit', ...
        'Units', 'normalized', ...
        'Position',[.1 0.18 .3 .04], ...
        'CallBack',@feedback_text_function,...
        'tag','feedback_text', ...
        'BackgroundColor', 'w', ...
        'FontSize', 12,...
        'string','Please feel free to give us any feedback from the experiment:',...
        'horizontal','left',...
        'enable','off');
    
    
 
%%%%%%%%%%%%%CALLBACKS%%%%%%%%------------------------------

% Dynamic reference time----------------------------------------

elseif strcmp(command_str,'Dynamic reference time')
    text = get( h_textBox37 ,'string');
    disp('Size Of Stimulus Display 1 X:'); disp(text);
    setup.dynamic_reference_time = str2double(text);
    %---------------------------------------------------------------------- 

% Size and position of stimulus display callbacks---------------   
 
elseif strcmp(command_str,'Size of Stimulus Display 1 X')
    text = get( h_textBox21 ,'string');
    disp('Size Of Stimulus Display 1 X:'); disp(text);
    setup.screens_info13 = str2double(text);
    %---------------------------------------------------------------------- 
elseif strcmp(command_str,'Size of Stimulus Display 1 Y')
    text = get( h_textBox22 ,'string');
    disp('Size Of Stimulus Display 1 Y:'); disp(text);
    setup.screens_info14 = str2double(text);
    %---------------------------------------------------------------------- 
elseif strcmp(command_str,'Size of Stimulus Display 2 X')
    text = get( h_textBox23 ,'string');
    disp('Size Of Stimulus Display 2 X:'); disp(text);
    setup.screens_info23 = str2double(text);
    %---------------------------------------------------------------------- 
elseif strcmp(command_str,'Size of Stimulus Display 2 Y')
    text = get( h_textBox24 ,'string');
    disp('Size Of Stimulus Display 2 Y:'); disp(text);
    setup.screens_info24 = str2double(text);
    %---------------------------------------------------------------------- 
elseif strcmp(command_str,'Size of Stimulus Display 3 X')
    text = get( h_textBox25 ,'string');
    disp('Size Of Stimulus Display 3 X:'); disp(text);
    setup.screens_info33 = str2double(text);
    %---------------------------------------------------------------------- 
elseif strcmp(command_str,'Size of Stimulus Display 3 Y')
    text = get( h_textBox26 ,'string');
    disp('Size Of Stimulus Display 3 Y:'); disp(text);
    setup.screens_info34 = str2double(text);
    %---------------------------------------------------------------------- 
elseif strcmp(command_str,'Size of Stimulus Display 4 X')
    text = get( h_textBox27 ,'string');
    disp('Size Of Stimulus Display 4 X:'); disp(text);
    setup.screens_info43 = str2double(text);
    %---------------------------------------------------------------------- 
elseif strcmp(command_str,'Size of Stimulus Display 4 Y')
    text = get( h_textBox28 ,'string');
    disp('Size Of Stimulus Display 4 Y:'); disp(text);
    setup.screens_info44 = str2double(text);
    %----------------------------------------------------------------------  
elseif strcmp(command_str,'Position of Stimulus Display 1 X')
    text = get( h_textBox29 ,'string');
    disp('Position Of Stimulus Display 4 Y:'); disp(text);
    setup.screens_info11 = str2double(text);
    %---------------------------------------------------------------------- 
elseif strcmp(command_str,'Position of Stimulus Display 1 Y')
    text = get( h_textBox30 ,'string');
    disp('Position Of Stimulus Display 4 Y:'); disp(text);
    setup.screens_info12 = str2double(text);
    %---------------------------------------------------------------------- 
elseif strcmp(command_str,'Position of Stimulus Display 2 X')
    text = get( h_textBox31 ,'string');
    disp('Position Of Stimulus Display 4 Y:'); disp(text);
    setup.screens_info21 = str2double(text);
    %---------------------------------------------------------------------- 
elseif strcmp(command_str,'Position of Stimulus Display 2 Y')
    text = get( h_textBox32 ,'string');
    disp('Position Of Stimulus Display 4 Y:'); disp(text);
    setup.screens_info22 = str2double(text);
    %---------------------------------------------------------------------- 
 elseif strcmp(command_str,'Position of Stimulus Display 3 X')
    text = get( h_textBox33 ,'string');
    disp('Position Of Stimulus Display 4 Y:'); disp(text);
    setup.screens_info31 = str2double(text);
    %---------------------------------------------------------------------- 
 elseif strcmp(command_str,'Position of Stimulus Display 3 Y')
    text = get( h_textBox34 ,'string');
    disp('Position Of Stimulus Display 4 Y:'); disp(text);
    setup.screens_info32 = str2double(text);
    %---------------------------------------------------------------------- 
 elseif strcmp(command_str,'Position of Stimulus Display 4 X')
    text = get( h_textBox35 ,'string');
    disp('Position Of Stimulus Display 4 Y:'); disp(text);
    setup.screens_info41 = str2double(text);
    %---------------------------------------------------------------------- 
 elseif strcmp(command_str,'Position of Stimulus Display 4 Y')
    text = get( h_textBox36 ,'string');
    disp('Position Of Stimulus Display 4 Y:'); disp(text);
    setup.screens_info42 = str2double(text);
    %----------------------------------------------------------------------  
elseif strcmp(command_str,'Number of Contents')
    text = get( h_textBox11 ,'string');
    disp('Contents:'); disp(text);
    setup.cv1 = str2double(text);
    %----------------------------------------------------------------------
elseif strcmp(command_str,'Number of Pipes')
    text = get( h_textBox12 ,'string');
    disp('Pipes:'); disp(text);
    setup.cv2 = str2double(text);
    %----------------------------------------------------------------------
elseif strcmp(command_str,'CV1 name')
    text = strcat('CV1 name: ',get(h_textBox13 ,'string'));
    disp(text);
    setup.cv1_name = get(h_textBox13 ,'string');
    %----------------------------------------------------------------------
elseif strcmp(command_str,'CV2 name')
    text = strcat('CV2 name: ',get(h_textBox14 ,'string'));
    disp(text);
    setup.cv2_name = get(h_textBox14 ,'string');
    %----------------------------------------------------------------------
   
    
    % Enable referencing checkbox
elseif strcmp(command_str,'checkBox1')                  % Enable checkboxes
    setup.referencing_enabled = get(h_checkBox1,'value');
    
    if get(h_checkBox1,'value') == 1;
        set(ref_button1,'enable','on');
        set(ref_button2,'enable','on');
        set(ref_button3,'enable','on');
    else
        set(ref_button1,'value',0);
        set(ref_button2,'value',0);
        set(ref_button3,'value',0);
        set(ref_button1,'enable','off');
        set(ref_button2,'enable','off');
        set(ref_button3,'enable','off');
        set(h_panel5,'visible','off');
        set(h_panel6,'visible','off');
        set(h_panel7,'visible','off');
        
    end
    
    
    % Reference mode panels
    %--------------------------------------------------
    % One static reference panel
elseif strcmp(command_str,'one ref')
    set(h_panel5,'visible','on');
    set(h_panel6,'visible','off');
    set(h_panel7,'visible','off');
    setup.ref_type = 'oneref';
    %--------------------------------------------------
    % Two static references panel
elseif strcmp(command_str,'double ref')
    set(h_panel5,'visible','off');
    set(h_panel6,'visible','on');
    set(h_panel7,'visible','off');
    setup.ref_type = 'tworef';
    %--------------------------------------------------
    % Dynamic reference panel
elseif strcmp(command_str,'dynamic ref')
    set(h_panel5,'visible','off');
    set(h_panel6,'visible','off');
    set(h_panel7,'visible','on');
    setup.ref_type = 'dynamic';
    %--------------------------------------------------
elseif strcmp(command_str,'checkBox2')                      % Enable random reference
    checkBox2 = findobj(h_fig,'tag','checkBox2');
    setup.ref_random = get(checkBox2,'value');
    %--------------------------------------------------
elseif strcmp(command_str,'checkBox3')                      % Enable exclude current
    checkBox3 = findobj(h_fig,'tag','checkBox3');
    setup.ref_exclude_current = get(checkBox3,'value');
    %--------------------------------------------------
elseif strcmp(command_str,'checkBox4')                      % Enable masking between ref
    checkBox4 = findobj(h_fig,'tag','checkBox4');
    setup.ref_masking = get(checkBox4,'value');
    %---------------------------------------------------
elseif strcmp(command_str,'popup_sel')                      % Select connecting CV for ref
    popup = findobj(h_fig(1),'tag','popup');
    str = get(popup, 'String');
    val = get(popup, 'value');
    
    switch str{val};
        case 'CV1'
            setup.ref_connecting = 'CV1';
            disp('Reference connected to CV1');
        case 'CV2'
            disp('Reference connected to CV2');
            setup.ref_connecting = 'CV2';
    end
    
    %---------------------------------------------------
elseif strcmp(command_str,'popup2')                      % Select content for the left monitor
    popup = findobj(h_fig(1),'tag','popup2');
    str = get(popup, 'String');
    val = get(popup, 'value');
    
    switch str{val};
        case 'Dynamic references'
            setup.left_monitor = 'Reference';
            disp('Left monitor displays dynamic references');
        case 'Static reference 1'
            setup.left_monitor = 'Reference 1';
            disp('Left monitor displays static reference 1');
        case 'Static reference 2'
            setup.left_monitor = 'Reference 2';
            disp('Left monitor displays static reference 2');
        case 'Stimulus'
            setup.left_monitor = 'Stimulus';
            disp('Left monitor displays stimulus');
        case 'Disabled'
            setup.left_monitor = 'Disabled';
            disp('Left monitor is disabled')
    end
    
    %---------------------------------------------------
elseif strcmp(command_str,'popup3')                      % Select content for the center monitor
    popup = findobj(h_fig(1),'tag','popup3');
    str = get(popup, 'String');
    val = get(popup, 'value');
    
    switch str{val};
        case 'Dynamic references'
            setup.center_monitor = 'Reference';
            disp('Center monitor displays reference');
        case 'Static reference 1'
            setup.center_monitor = 'Reference 1';
            disp('Center monitor displays reference 1');
        case 'Static reference 2'
            setup.center_monitor = 'Reference 2';
            disp('Center monitor displays reference 2');
        case 'Stimulus'
            setup.center_monitor = 'Stimulus';
            disp('Center monitor displays stimulus');
        case 'Disabled'
            setup.center_monitor = 'Disabled';
            disp('Center monitor is disabled')
    end
    
    %---------------------------------------------------
elseif strcmp(command_str,'popup4')                      % Select content for the right monitor
    popup = findobj(h_fig(1),'tag','popup4');
    str = get(popup, 'String');
    val = get(popup, 'value');
    
    switch str{val};
        case 'Dynamic references'
            setup.right_monitor = 'Reference';
            disp('Right monitor displays reference');
        case 'Static reference 1'
            setup.right_monitor = 'Reference 1';
            disp('Right monitor displays reference 1');
        case 'Static reference 2'
            setup.right_monitor = 'Reference 2';
            disp('Right monitor displays reference 2');
        case 'Stimulus'
            setup.right_monitor = 'Stimulus';
            disp('Right monitor displays stimulus');
        case 'Disabled'
            setup.right_monitor = 'Disabled';
            disp('Right monitor is disabled')
    end
    
    %---------------------------------------------------
elseif strcmp(command_str,'popup5')                      % Select content for the bottom monitor
    popup = findobj(h_fig(1),'tag','popup5');
    str = get(popup, 'String');
    val = get(popup, 'value');
    
    switch str{val};
        case 'Dynamic references'
            setup.bottom_monitor = 'Reference';
            disp('Bottom monitor displays dynamic reference');
        case 'Static reference 1'
            setup.bottom_monitor = 'Reference 1';
            disp('Bottom monitor displays reference 1');
        case 'Static reference 2'
            setup.bottom_monitor = 'Reference 2';
            disp('Bottom monitor displays reference 2');
        case 'Stimulus'
            setup.bottom_monitor = 'Stimulus';
            disp('Bottom monitor displays stimulus');
        case 'Questions'
            setup.bottom_monitor = 'Questions';
            disp('Bottom monitor displays questions');
        case 'Disabled'
            setup.bottom_monitor = 'Disabled';
            disp('Bottom monitor is disabled')
    end
    
    
    
    
    %----------------------------------------------------------------------
    % Rules for createStillACR_sbu radio buttons (See specsheet)
    % TODO: MAKE THESE EASIER TO UNDERSTAND
    %----------------------------------------------------------------------
    
elseif strcmp(command_str,'cv1_rand')
    cv1_lock = findobj(h_fig(1),'tag','radioButton2');
    cv2_lock = findobj(h_fig(1),'tag','radioButton4');
    enable_text = findobj(h_fig(1),'tag','choose_first');
    enable_radio1 = findobj(h_fig(1),'tag','radioButton5');
    enable_radio2 = findobj(h_fig(1),'tag','radioButton6');
    
    disp('CV1 random');
    
    if setup.cv1_random == 0
        setup.cv1_random = 1;
    else
        setup.cv1_random = 0;
    end
    
    if setup.cv1_random == 1 && setup.cv2_random == 1
        set(cv1_lock,'value',0);
        set(cv2_lock,'value',0);
        set(enable_text,'enable','off')
        set(enable_radio1,'enable','off')
        set(enable_radio2,'enable','off')
        setup.dom_enabled = 0;
        setup.cv1_locked = 0;
        setup.cv2_locked = 0;
    end
    
    if setup.cv1_random == 0 && setup.cv2_random == 0
        set(cv1_lock,'value',1);
        set(cv2_lock,'value',1);
        set(enable_text,'enable','on')
        set(enable_radio1,'enable','on')
        set(enable_radio2,'enable','on')
        setup.dom_enabled = 0;
        setup.cv1_locked = 1;
        setup.cv2_locked = 1;
    end
    
    if setup.cv1_random == 1 && setup.cv2_random == 0
        set(cv2_lock,'value',1);
        setup.cv2_locked = 1;
        set(cv1_lock,'value',0);
        setup.cv1_locked = 0;
        set(enable_text,'enable','off')
        set(enable_radio1,'enable','off')
        set(enable_radio2,'enable','off')
        setup.dom_enabled = 0;
    end
    if setup.cv1_random == 0 && setup.cv2_random == 1
        set(cv2_lock,'value',0);
        setup.cv2_locked = 0;
        set(cv1_lock,'value',1);
        setup.cv1_locked = 1;
        set(enable_text,'enable','off')
        set(enable_radio1,'enable','off')
        set(enable_radio2,'enable','off')
        setup.dom_enabled = 0;
    end
    
    %--------------------------------------------------
elseif strcmp(command_str,'cv1_lock')
    
    cv1_lock = findobj(h_fig(1),'tag','radioButton2');
    cv2_lock = findobj(h_fig(1),'tag','radioButton4');
    cv1_rand = findobj(h_fig(1),'tag','radioButton1');
    cv2_rand = findobj(h_fig(1),'tag','radioButton3');
    enable_text = findobj(h_fig(1),'tag','choose_first');
    enable_radio1 = findobj(h_fig(1),'tag','radioButton5');
    enable_radio2 = findobj(h_fig(1),'tag','radioButton6');
    
    disp('CV1 locked');
    do_nothing = 0;
    
    if get(cv1_lock,'value') == 1 && get(cv2_lock,'value') == 1
        set(enable_text,'enable','on')
        set(enable_radio1,'enable','on')
        set(enable_radio2,'enable','on')
        setup.dom_enabled = 1;
    elseif get(cv1_rand,'value') == 0 && get(cv2_rand,'value') == 0
        set(cv1_lock,'value',1)
        set(cv2_lock,'value',1)
        setup.dom_enabled = 1;
        setup.cv1_locked = 1;
        setup.cv2_locked = 1;
    else
        set(enable_text,'enable','off')
        set(enable_radio1,'enable','off')
        set(enable_radio2,'enable','off')
        setup.dom_enabled = 0;
    end
    
    if get(cv1_rand,'value') == 1 && get(cv2_rand,'value') == 1
        if get(cv1_lock,'value') == 1
            set(cv2_lock,'value',0);
            setup.cv2_locked = 0;
            set(enable_text,'enable','off')
            set(enable_radio1,'enable','off')
            set(enable_radio2,'enable','off')
            setup.dom_enabled = 0;
        else
            set(cv1_lock,'value',0);
            setup.cv1_locked = 0;
            set(enable_text,'enable','off')
            set(enable_radio1,'enable','off')
            set(enable_radio2,'enable','off')
            setup.dom_enabled = 0;
        end
    end
    
    if get(cv1_rand,'value') == 1 && get(cv2_rand,'value') == 0
        set(cv1_lock,'value',0)
        set(cv2_lock,'value',1)
        setup.cv1_locked = 0;
        setup.cv2_locked = 1;
        set(enable_text,'enable','off')
        set(enable_radio1,'enable','off')
        set(enable_radio2,'enable','off')
        setup.dom_enabled = 0;
        do_nothing = 1;
    end
    
    if get(cv1_rand,'value') == 0 && get(cv2_rand,'value') == 1
        set(cv1_lock,'value',1)
        set(cv2_lock,'value',0)
        setup.cv1_locked = 1;
        setup.cv2_locked = 0;
        set(enable_text,'enable','off')
        set(enable_radio1,'enable','off')
        set(enable_radio2,'enable','off')
        setup.dom_enabled = 0;
        do_nothing = 1;
        
    end
    
    if do_nothing == 1
        disp('wrong move')
    else
        if setup.cv1_locked == 0
            setup.cv1_locked = 1;
        elseif setup.cv2_locked == 1 && setup.cv1_locked == 1
            setup.cv2_locked = 1;
        else
            setup.cv1_locked = 0;
        end
    end
    
    %--------------------------------------------------
elseif strcmp(command_str,'cv2_rand')
    cv1_lock = findobj(h_fig(1),'tag','radioButton2');
    cv2_lock = findobj(h_fig(1),'tag','radioButton4');
    enable_text = findobj(h_fig(1),'tag','choose_first');
    enable_radio1 = findobj(h_fig(1),'tag','radioButton5');
    enable_radio2 = findobj(h_fig(1),'tag','radioButton6');
    
    disp('CV2 random');
    
    if setup.cv2_random == 0
        setup.cv2_random = 1;
    else
        setup.cv2_random = 0;
    end
    
    if setup.cv1_random == 1 && setup.cv2_random == 1
        set(cv1_lock,'value',0);
        set(cv2_lock,'value',0);
        set(enable_text,'enable','off')
        set(enable_radio1,'enable','off')
        set(enable_radio2,'enable','off')
        setup.dom_enabled = 0;
        setup.cv1_locked = 0;
        setup.cv2_locked = 0;
    end
    
    if setup.cv1_random == 0 && setup.cv2_random == 0
        set(cv1_lock,'value',1);
        set(cv2_lock,'value',1);
        set(enable_text,'enable','on')
        set(enable_radio1,'enable','on')
        set(enable_radio2,'enable','on')
        setup.dom_enabled = 1;
        setup.cv1_locked = 1;
        setup.cv2_locked = 1;
    end
    
    if setup.cv1_random == 0 && setup.cv2_random == 1
        set(cv2_lock,'value',0);
        setup.cv2_locked = 0;
        set(cv1_lock,'value',1);
        setup.cv1_locked = 1;
        set(enable_text,'enable','off')
        set(enable_radio1,'enable','off')
        set(enable_radio2,'enable','off')
        setup.dom_enabled = 0;
    end
    
    if setup.cv1_random == 1 && setup.cv2_random == 0
        set(cv2_lock,'value',1);
        setup.cv2_locked = 1;
        set(cv1_lock,'value',0);
        setup.cv1_locked = 0;
        set(enable_text,'enable','off')
        set(enable_radio1,'enable','off')
        set(enable_radio2,'enable','off')
        setup.dom_enabled = 0;
    end
    
    %--------------------------------------------------
elseif strcmp(command_str,'cv2_lock')
    disp('CV2 locked');
    do_nothing = 0;
    
    cv1_lock = findobj(h_fig(1),'tag','radioButton2');
    cv2_lock = findobj(h_fig(1),'tag','radioButton4');
    cv1_rand = findobj(h_fig(1),'tag','radioButton1');
    cv2_rand = findobj(h_fig(1),'tag','radioButton3');
    enable_text = findobj(h_fig(1),'tag','choose_first');
    enable_radio1 = findobj(h_fig(1),'tag','radioButton5');
    enable_radio2 = findobj(h_fig(1),'tag','radioButton6');
    
    if get(cv1_lock,'value') == 1 && get(cv2_lock,'value') == 1
        set(enable_text,'enable','on')
        set(enable_radio1,'enable','on')
        set(enable_radio2,'enable','on')
        setup.dom_enabled = 1;
    elseif get(cv1_rand,'value') == 0 && get(cv2_rand,'value') == 0
        set(cv1_lock,'value',1)
        set(cv2_lock,'value',1)
        setup.dom_enabled = 1;
        setup.cv1_locked = 1;
        setup.cv2_locked = 1;
    else
        set(enable_text,'enable','off')
        set(enable_radio1,'enable','off')
        set(enable_radio2,'enable','off')
        setup.dom_enabled = 0;
    end
    
    if get(cv1_rand,'value') == 1 && get(cv2_rand,'value') == 1
        if get(cv2_lock,'value') == 1
            set(cv1_lock,'value',0);
            setup.cv1_locked = 0;
            set(enable_text,'enable','off')
            set(enable_radio1,'enable','off')
            set(enable_radio2,'enable','off')
            setup.dom_enabled = 0;
        else
            set(cv2_lock,'value',0);
            setup.cv2_locked = 0;
            set(enable_text,'enable','off')
            set(enable_radio1,'enable','off')
            set(enable_radio2,'enable','off')
            setup.dom_enabled = 0;
        end
    end
    
    if get(cv1_rand,'value') == 1 && get(cv2_rand,'value') == 0
        set(cv1_lock,'value',0)
        set(cv2_lock,'value',1)
        setup.cv1_locked = 0;
        setup.cv2_locked = 1;
        set(enable_text,'enable','off')
        set(enable_radio1,'enable','off')
        set(enable_radio2,'enable','off')
        setup.dom_enabled = 0;
        do_nothing = 1;
    end
    
    if get(cv1_rand,'value') == 0 && get(cv2_rand,'value') == 1
        set(cv1_lock,'value',1)
        set(cv2_lock,'value',0)
        setup.cv1_locked = 1;
        setup.cv2_locked = 0;
        set(enable_text,'enable','off')
        set(enable_radio1,'enable','off')
        set(enable_radio2,'enable','off')
        setup.dom_enabled = 0;
        do_nothing = 1;
    end
    
    if do_nothing == 1
        disp('wrong move')
    else
        if setup.cv2_locked == 0
            setup.cv2_locked = 1;
        elseif setup.cv2_locked == 1 && setup.cv1_locked == 1
            setup.cv2_locked = 1;
        else
            setup.cv2_locked = 0;
        end
    end
    
    %--------------------------------------------------
elseif strcmp(command_str,'cv1_dom')
    cv1_dom = findobj(h_fig(1),'tag','radioButton5');
    cv2_dom = findobj(h_fig(1),'tag','radioButton6');
    
    if get(cv1_dom,'value') == 1
        set(cv2_dom,'value',0);
        setup.dom_value = 1;
    else
        set(cv2_dom,'value',1);
        setup.dom_value = 2;
    end
    
    %--------------------------------------------------
    
elseif strcmp(command_str,'cv2_dom')
    cv1_dom = findobj(h_fig(1),'tag','radioButton5');
    cv2_dom = findobj(h_fig(1),'tag','radioButton6');
    
    if get(cv2_dom,'value') == 1
        set(cv1_dom,'value',0);
        setup.dom_value = 2;
    else
        set(cv1_dom,'value',1);
        setup.dom_value = 1;
    end
    
    
    % PUSH BUTTONS
    %--------------------------------------------------

% Preview display callbacks
elseif strcmp(command_str,'Push Button5 Pressed')          
    fig_sti1=figure('position',[setup.screens_info11 setup.screens_info12  setup.screens_info13 setup.screens_info14])
    uicontrol('Style','text',...
        'Position',[setup.screens_info13/2-50 setup.screens_info14/2-30 100 60],...
        'FontSize', 16,...
        'String',setup.left_monitor)
  
    fig_sti2=figure('position',[setup.screens_info21 setup.screens_info22  setup.screens_info23 setup.screens_info24])
        uicontrol('Style','text',...
        'Position',[setup.screens_info23/2-50 setup.screens_info24/2-30 100 60],...
        'FontSize', 16,...
        'String',setup.center_monitor)
    
    fig_sti3=figure('position',[setup.screens_info31 setup.screens_info32  setup.screens_info33 setup.screens_info34])
        uicontrol('Style','text',...
        'Position',[setup.screens_info33/2-50 setup.screens_info34/2-30 100 60],...
        'FontSize', 16,...
        'String',setup.right_monitor)
    
    fig_sti4=figure('position',[setup.screens_info41 setup.screens_info42  setup.screens_info43 setup.screens_info44])
        uicontrol('Style','text',...
        'Position',[setup.screens_info43/2-50 setup.screens_info44/2-30 100 60],...
        'FontSize', 16,...
        'String',setup.bottom_monitor)
    
    pause(1)
    close(fig_sti1);
    close(fig_sti2);
    close(fig_sti3);
    close(fig_sti4);
    %--------------------------------------------------  
   
    %--------------------------------------------------
elseif strcmp(command_str,'Push Button Pressed')            % Quit the program
    delete(h_fig);
    close all;
    clear all;
    clc
    %--------------------------------------------------
elseif strcmp(command_str,'Push Button2 Pressed')           % Preview stimulus vectors
    if isempty(setup.cv1) || isempty(setup.cv2)
        disp('Choose the number of CVs before continuing')
        return
    end
    
    disp('Creating stimulus vectors');
    setup.sequences = createRandomization(setup);
    disp(setup.sequences');
    
    % Test for randomness
    [h1 p1 ] = runstest(setup.sequences(1,:));
    [h2 p2 ] = runstest(setup.sequences(2,:));
    
    warning off
    
    if h1 == 0
        disp(['CV1 in random order. h0 accepted with p = ' num2str(p1)])
    else
        disp(['CV1 not in random order. h0 rejected with p = ' num2str(p1)])
    end
    
    if h2 == 0
        disp(['CV2 in random order. h0 accepted with p = ' num2str(p2)])
    else
        disp(['CV2 not in random order. h0 rejected with p = ' num2str(p2)])
    end
    
    %--------------------------------------------------
elseif strcmp(command_str,'Push Button3 Pressed')           % Save settings and stimulus vectors
    
    disp(setup)
    
    if setup.modifying == 0
        % Check settings
        if isempty(setup.cv1) || isempty(setup.cv2)
            disp('Choose the number of CVs before continuing')
            return
        end
        
        if isempty(setup.name)
            disp('Setup name is missing. Please name your setup before continuing.')
        end
        
        if isempty(setup.feedback)
            setup.feedback = 0;
            setup.feedback_text = '';
        end
        
        if isempty(setup.cv1_random) == 1 || isempty(setup.cv2_random) == 1 ...
                || isempty(setup.cv1_locked) || isempty(setup.cv2_locked) == 1 || ...
                isempty(setup.dom_enabled) == 1
            disp('Some settings are missing. Please check your setup.')
            return
        end
        
        % Check monitors
        if strcmp(setup.left_monitor,'Stimulus') == 0 && ...
                strcmp(setup.right_monitor,'Stimulus') == 0 && ...
                strcmp(setup.center_monitor,'Stimulus') == 0 && ...
                strcmp(setup.bottom_monitor,'Stimulus') == 0
            if strcmp(setup.left_monitor,'Stimulus & Dyn. Refs.') == 0 && ...
                    strcmp(setup.center_monitor,'Stimulus & Dyn. Refs.') == 0 && ...
                    strcmp(setup.right_monitor,'Stimulus & Dyn. Refs.') == 0
                disp('Stimulus monitor not selected. Please select before continuing.')
                return
            end
        elseif strcmp(setup.left_monitor,'Reference') == 0 && ...
                strcmp(setup.right_monitor,'Reference') == 0 && ...
                strcmp(setup.center_monitor,'Reference') == 0 && ...
                strcmp(setup.bottom_monitor,'Reference') == 0 && ...
                setup.referencing_enabled == 1 && ...
                strcmp(setup.ref_type,'dynamic')
            disp('Reference monitor not selected. Please select before continuing.')
            return
        elseif strcmp(setup.left_monitor,'Questions') == 0 && ...
                strcmp(setup.right_monitor,'Questions') == 0 && ...
                strcmp(setup.center_monitor,'Questions') == 0 && ...
                strcmp(setup.bottom_monitor,'Questions') == 0
            disp('Questions monitor not selected. Please select before continuing.')
            return
        elseif strcmp(setup.left_monitor,'Reference 1') == 0 && ...
                strcmp(setup.right_monitor,'Reference 1') == 0 && ...
                strcmp(setup.center_monitor,'Reference 1') == 0 && ...
                strcmp(setup.bottom_monitor,'Reference 1') == 0 && ...
                setup.referencing_enabled == 1 && ...
                strcmp(setup.ref_type,'oneref')
            disp('Reference monitor not selected. Please select one monitor before continuing.')
            return
        elseif strcmp(setup.left_monitor,'Reference 1') == 0 && ...
                strcmp(setup.right_monitor,'Reference 1') == 0 && ...
                strcmp(setup.center_monitor,'Reference 1') == 0 && ...
                strcmp(setup.bottom_monitor,'Reference 1') == 0 && ...
                setup.referencing_enabled == 1  && ...
                strcmp(setup.ref_type,'tworef') || ...
                strcmp(setup.left_monitor,'Reference 2') == 0 && ...
                strcmp(setup.right_monitor,'Reference 2') == 0 && ...
                strcmp(setup.center_monitor,'Reference 2') == 0 && ...
                strcmp(setup.bottom_monitor,'Reference 2') == 0 && ...
                setup.referencing_enabled == 1  && ...
                strcmp(setup.ref_type,'tworef')
            disp('Reference monitors not selected. Please select two monitors before continuing.')
            return
        end
        save([pwd filesep 'setups' filesep setup.name filesep setup.name ...
            '_sbu.mat'],'setup')
        
    elseif setup.modifying == 1
        save([pwd filesep 'setups' filesep setup.name filesep setup.name ...
            '_sbu.mat'],'setup','-append')
    end
    
    disp(['Settings saved to: ' pwd filesep 'setups' filesep setup.name ...
        filesep setup.name '_sbu.mat'])
    
    % Exit SBU and initialize QBU with an old setup
    if setup.modifying ~= 2
        % Save figure for 'back'- and 'modify'-buttons
        hgsave([pwd filesep 'setups' filesep setup.name filesep 'sbu_screen.fig']);
        
        handles = guihandles(gcf);
        guidata(gcf,handles);
        
        sbu_state = guidata(gcf);
        
        save([pwd filesep 'setups' filesep setup.name filesep ...
            'sbu_state.mat'],'sbu_state')
    end
    
    % If we are saving a new setup with different name
    if setup.modifying == 2
        tmp_name = setup.name;
        setup.name = setup.old_name;
    end
    
    % Check if were are modifying an existing gui
    if setup.modifying == 1 || setup.modifying == 2
        position = get(gcf,'position');
        close all;
        % Load the figure
        hgload([pwd filesep 'setups' filesep setup.name filesep 'qbu_screen.fig']);
        set(gcf,'position',position)
        % Load saved handles
        load([pwd filesep 'setups' filesep setup.name filesep 'qbu_state.mat'])
        if setup.modifying == 2
            setup.name = tmp_name;
        end
    else
        position = get(gcf,'position');
        close all;
        QBU('initialize',position);
    end
    %--------------------------------------------------
    
    % Go back-button callback
elseif strcmp(command_str,'Push Button4 Pressed')
    position = get(gcf,'position');
    close all;
    hgload([pwd filesep 'setups' filesep setup.name filesep 'start_screen.fig']);
    set(gcf,'position',position)
end
end
%--------------------------------------------------------------------------
% Feedback callback
function enable_feedback(source,~)
global setup
setup.feedback = get(source,'value');

if setup.feedback
    set(findobj('tag','feedback_text'),'enable','on')
    setup.feedback_text = get(findobj('tag','feedback_text'),'string');
else
    set(findobj('tag','feedback_text'),'enable','off')
end

end

% Feedback text callback
function feedback_text_function(source,~)
global setup
setup.feedback_text = get(source,'string');
end

%--------------------------------------------------------------------------
% Referencing type radios
function selcbk(source,~)
text = (get(get(source,'SelectedObject'),'String'));
disp(text);

if strcmp(text,'One static reference')
    createStillACR_sbu('one ref');
elseif strcmp(text,'Two static references')
    createStillACR_sbu('double ref');
elseif strcmp(text,'Dynamic reference')
    createStillACR_sbu('dynamic ref');
else
    disp('Select referencing type');
end
end

%--------------------------------------------------------------------------
% Save as -callback
function saveas(~,~)
global setup

if setup.modifying == 0
    disp('You can not save a setup as modified before it has been created. Please continue to QBU.')
    return
end

setup.old_name = setup.name;
options.Resize='on';
options.WindowStyle='normal';
setup.name = inputdlg('Name the new setup:','Create new setup',1,{'Setup name'},options);
if isempty(setup.name)
    setup.name = setup.old_name;
    disp('Cancelled creating new setup')
    return
end
setup.name = [setup.name{1} '_' setup.version];

% Make directory for the new setup
dir_name = setup.name;
mkdir('setups',dir_name);

% Save figure for 'back'- and 'modify'-buttons
hgsave([pwd filesep 'setups' filesep setup.name filesep 'sbu_screen.fig']);

handles = guihandles(gcf);
guidata(gcf,handles);

sbu_state = guidata(gcf);

save([pwd filesep 'setups' filesep setup.name filesep 'sbu_state.mat'],'sbu_state');

% Initialize new setup directory
initSetup()
end























